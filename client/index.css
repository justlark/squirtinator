:root {
  /* Catppuccin Mocha */
  --catppuccin-rosewater: #f5e0dc;
  --catppuccin-flamingo: #f2cdcd;
  --catppuccin-pink: #f5c2e7;
  --catppuccin-mauve: #cba6f7;
  --catppuccin-red: #f38ba8;
  --catppuccin-maroon: #eba0ac;
  --catppuccin-peach: #fab387;
  --catppuccin-yellow: #f9e2af;
  --catppuccin-green: #a6e3a1;
  --catppuccin-teal: #94e2d5;
  --catppuccin-sky: #89dceb;
  --catppuccin-sapphire: #74c7ec;
  --catppuccin-blue: #89b4fa;
  --catppuccin-lavender: #b4befe;
  --catppuccin-text: #cdd6f4;
  --catppuccin-subtext1: #bac2de;
  --catppuccin-subtext0: #a6adc8;
  --catppuccin-overlay2: #9399b2;
  --catppuccin-overlay1: #7f849c;
  --catppuccin-overlay0: #6c7086;
  --catppuccin-surface2: #585b70;
  --catppuccin-surface1: #45475a;
  --catppuccin-surface0: #313244;
  --catppuccin-base: #1e1e2e;
  --catppuccin-mantle: #181825;
  --catppuccin-crust: #11111b;

  /* Semantic colors */
  --color-fg: var(--catppuccin-text);
  --color-bg: var(--catppuccin-mantle);
  --color-primary: var(--catppuccin-teal);
  --color-border: var(--catppuccin-overlay1);
  --color-fg-active: var(--color-primary);
  --color-bg-active: var(--catppuccin-base);

  /* Styling */
  --font-size-base: 16px;
  --border-radius: 5px;
  --border-width: 1px;
  --border-width-active: 2px;
}

html {
  height: 100%;
}

body {
  font-family: "Roboto", sans-serif;
  font-size: var(--font-size-base);
  max-width: 25rem;
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  padding: 0 1.5rem;
  color: var(--color-fg);
  background-color: var(--color-bg);
  accent-color: var(--color-primary);
  height: 100%;
}

body > h1 {
  margin-top: 2rem;
  margin-bottom: 1.5rem;
  text-align: center;
}

@media (min-width: 640px) {
  body > h1 {
    margin-bottom: 4rem;
  }
}

button,
.nav-button,
input {
  outline: var(--color-border) solid var(--border-width);
  outline-offset: 0;
  border: none;
  border-radius: var(--border-radius);
}

:is(button, .nav-button) {
  font-size: 1.2rem;
}

button {
  font-family: "Roboto", sans-serif;
  font-size: var(--font-size-base);
  font-weight: bold;
  color: var(--color-fg);
  background-color: transparent;
  padding: 1rem;
}

button:not(:active):not(:focus-visible) {
  transition-duration: 0.25s;
  transition-timing-function: ease-in-out;
  transition-property: outline-color, outline-width, background-color;
}

/*
 * These styles are deliberately exclusive of touch devices.
 */
@media (hover: hover) {
  /*
   * If you try to apply this `:hover` style on touch devices (i.e. mobile), it
   * will get into a "stuck" state where the style will continue to apply after
   * the button has been released and until the focus moves elsewhere.
   */
  button:hover {
    cursor: pointer;
    background-color: var(--color-bg-active);
  }

  /*
   * On touch devices, the `background-color` should be animated alongside the
   * `outline-color` and `outline-width` because it won't already be styled by
   * the `:hover`. We do *not* want this on non-touch devices, however, because
   * the UI will feel sluggish if there is a delay between the mouse hover and
   * the button changing color in response.
   */
  button:not(:active):not(:focus-visible) {
    transition-property: outline-color, outline-width;
  }
}

button:active,
button[role="switch"][aria-checked="true"],
:is(input, button, .nav-button):focus-visible {
  background-color: var(--color-bg-active);
  outline-color: var(--color-fg-active);
  outline-width: var(--border-width-active);
}

.nav-button {
  display: flex;
  gap: 1rem;
  box-sizing: border-box;
  align-items: center;
  color: var(--color-fg);
  text-decoration: none;
  padding: 1rem;
}

.nav-button-forward {
  justify-content: space-between;
}

.nav-button-back {
  justify-content: start;
}

.nav-button:hover {
  cursor: pointer;
  background-color: var(--color-bg-active);
}

.nav-button:active {
  background-color: var(--color-bg-active);
}

form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

form h2 {
  margin-bottom: 0;
}

form > h2:first-of-type {
  margin-top: 0;
}

input {
  font-family: "Roboto", sans-serif;
  font-size: var(--font-size-base);
  color: var(--color-fg);
  background-color: transparent;
  padding: 0.5rem;
}

hr {
  border: none;
  border-top: var(--border-width-active) solid var(--color-border);
  width: 100%;
  margin: 2rem 0;
}

#remote > * {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

#remote {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

#now-button {
  flex-grow: 1;
  max-height: 50%;
}

@media (min-width: 768px) {
  #now-button {
    max-height: 10rem;
  }
}

#auto-button,
#settings-link,
#remote-link {
  min-height: 5rem;
}

#addr-info {
  text-align: center;
}
